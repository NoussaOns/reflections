How did viewing a diff between two versions of a file help you see the bug that was introduced?
it helped in finding the changes of both files so that we can fix them if 
prevoius vesions were better than current ones.

How could having easy access to the entire history of a file make you
a more efficient programmer in the long term?
It makes the process easier for finding a previuos version when needed
wihtout taking a lot of time looking for it

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Sometimes it the programmer forgets to create a commit so on this case google docs is better. 
However, when commiting by rules, this will be easier for you to go to a specific commit by logic.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
I think git is responsible for programming so in most of the time multiple files are included in the change.
However, google docs isn't responsible for this, so it does what it does.

How can you use the commands git log and git diff to view the history of files?
we have to clone the project at first (if needed) 
git clone («·—«»ÿ)
git log <<<<<- to get the history
git diff first_commit_id second_commit_id <<<<<- to get the diffrences between the two
(if colors are not viewed write (git config --global color.ui auto.

How might using version control make you more confident to make changes that could break something?
Every time to check, instead of being scared of what would happen by removing a line of code and you don't know how to return to the previous change,
git is making this easy by always removing and adding and getting needed version every time needed.